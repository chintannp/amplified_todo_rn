{"version":3,"file":"Constants.types.js","sourceRoot":"","sources":["../src/Constants.types.ts"],"names":[],"mappings":"AAEA,MAAM,CAAN,IAAY,YAIX;AAJD,WAAY,YAAY;IACtB,yCAAyB,CAAA;IACzB,6BAAa,CAAA;IACb,+BAAe,CAAA;AACjB,CAAC,EAJW,YAAY,KAAZ,YAAY,QAIvB;AAED,MAAM,CAAN,IAAY,oBAIX;AAJD,WAAY,oBAAoB;IAC9B,qCAAa,CAAA;IACb,iDAAyB,CAAA;IACzB,mDAA2B,CAAA;AAC7B,CAAC,EAJW,oBAAoB,KAApB,oBAAoB,QAI/B;AAED,MAAM,CAAN,IAAY,kBAIX;AAJD,WAAY,kBAAkB;IAC5B,yCAAmB,CAAA;IACnB,uCAAiB,CAAA;IACjB,iDAA2B,CAAA;AAC7B,CAAC,EAJW,kBAAkB,KAAlB,kBAAkB,QAI7B","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nexport enum AppOwnership {\n  Standalone = 'standalone',\n  Expo = 'expo',\n  Guest = 'guest',\n}\n\nexport enum ExecutionEnvironment {\n  Bare = 'bare',\n  Standalone = 'standalone',\n  StoreClient = 'storeClient',\n}\n\nexport enum UserInterfaceIdiom {\n  Handset = 'handset',\n  Tablet = 'tablet',\n  Unsupported = 'unsupported',\n}\n\nexport interface IOSManifest {\n  buildNumber: string;\n  platform: string;\n  model: string | null;\n  userInterfaceIdiom: UserInterfaceIdiom;\n  systemVersion: string;\n  [key: string]: any;\n}\n\nexport interface AndroidManifest {\n  versionCode: number;\n  [key: string]: any;\n}\n\nexport interface WebManifest {\n  [key: string]: any;\n}\n\nexport interface ManifestAsset {\n  url: string;\n}\n\n/**\n * A modern manifest.\n */\nexport interface Manifest {\n  id: string;\n  createdAt: string;\n  runtimeVersion: string;\n  launchAsset: ManifestAsset;\n  assets: ManifestAsset[];\n  metadata: object;\n}\n\n/**\n * A classic manifest https://docs.expo.io/guides/how-expo-works/#expo-manifest\n */\nexport interface AppManifest extends ExpoConfig {\n  /** Published Apps Only */\n  releaseId?: string;\n  revisionId?: string;\n  releaseChannel?: string;\n  packagerOpts?: {\n    hostType?: string;\n    dev?: boolean;\n    strict?: boolean;\n    minify?: boolean;\n    urlType?: string;\n    urlRandomness?: string;\n    lanType?: string;\n    [key: string]: any;\n  };\n  developer?: {\n    tool?: string;\n    [key: string]: any;\n  };\n  bundleUrl: string;\n  debuggerHost?: string;\n  mainModuleName?: string;\n  logUrl?: string;\n\n  /**\n   * The Expo account name and slug for this project.\n   * @deprecated - Prefer `projectId` or `originalFullName` instead for identification and `scopeKey` for\n   * scoping due to immutability.\n   */\n  id?: string;\n\n  /**\n   * The original Expo account name and slug for this project. Formatted like `@username/slug`.\n   * When unauthenticated, the username is `@anonymous`. For published projects, this value\n   * will not change when a project is transferred between accounts or renamed.\n   */\n  originalFullName?: string;\n\n  /**\n   * The Expo account name and slug used for display purposes. Formatted like `@username/slug`.\n   * When unauthenticated, the username is `@anonymous`. For published projects, this value\n   * may change when a project is transferred between accounts or renamed.\n   */\n  currentFullName?: string;\n\n  /**\n   * An opaque unique string for scoping client-side data to this project. This value\n   * will not change when a project is transferred between accounts or renamed.\n   */\n  scopeKey?: string;\n\n  /**\n   * The ID for this project. UUID. This value will not change when a project is transferred\n   * between accounts or renamed.\n   */\n  projectId?: string;\n\n  [key: string]: any;\n}\n\nexport interface PlatformManifest {\n  ios?: IOSManifest;\n  android?: AndroidManifest;\n  web?: WebManifest;\n  detach?: {\n    scheme?: string;\n    [key: string]: any;\n  };\n  logUrl?: string;\n  scheme?: string;\n  hostUri?: string;\n  developer?: string;\n  [key: string]: any;\n}\n\nexport interface NativeConstants {\n  name: 'ExponentConstants';\n  appOwnership: AppOwnership | null;\n  debugMode: boolean;\n  deviceName?: string;\n  deviceYearClass: number | null;\n  executionEnvironment: ExecutionEnvironment;\n  experienceUrl: string;\n  // only nullable on web\n  expoRuntimeVersion: string | null;\n  /**\n   * The version string of the Expo client currently running.\n   * Returns `null` in bare workflow and web.\n   */\n  expoVersion: string | null;\n  isDetached?: boolean;\n  intentUri?: string;\n  /**\n   * @deprecated Constants.installationId is deprecated in favor of generating your own ID and\n   * storing it. This API will be removed in SDK 44.\n   */\n  installationId: string;\n  isDevice: boolean;\n  isHeadless: boolean;\n  linkingUri: string;\n  nativeAppVersion: string | null;\n  nativeBuildVersion: string | null;\n  /**\n   * Classic manifest for Expo apps using classic updates.\n   * Returns `null` in bare workflow and when `manifest2` is non-null.\n   */\n  manifest: AppManifest | null;\n  /**\n   * New manifest for Expo apps using modern Expo Updates.\n   * Returns `null` in bare workflow and when `manifest` is non-null.\n   */\n  manifest2: Manifest | null;\n  sessionId: string;\n  statusBarHeight: number;\n  systemFonts: string[];\n  systemVersion?: number;\n  platform?: PlatformManifest;\n  [key: string]: any;\n\n  getWebViewUserAgentAsync: () => Promise<string | null>;\n}\n\nexport interface Constants extends NativeConstants {\n  /**\n   * @deprecated Constants.deviceId is deprecated in favor of generating your own ID and storing it.\n   * This API will be removed in SDK 44.\n   */\n  deviceId?: string;\n  /**\n   * @deprecated Constants.linkingUrl has been renamed to Constants.linkingUri. Consider using the\n   * Linking API directly. Constants.linkingUrl will be removed in SDK 44.\n   */\n  linkingUrl?: string;\n  /**\n   * @warning do not use this property. Use `manifest` by default.\n   *\n   * In certain cases accessing manifest via this property\n   * suppresses important warning about missing manifest.\n   */\n  __unsafeNoWarnManifest?: AppManifest;\n}\n"]}