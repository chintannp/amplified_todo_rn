{"version":3,"file":"RootViewBackgroundColor.js","sourceRoot":"","sources":["../../src/android/RootViewBackgroundColor.ts"],"names":[],"mappings":";;;AAGA,gEAAkF;AAClF,qCAA4C;AAC5C,qCAA+E;AAE/E,MAAM,yBAAyB,GAAG,0BAA0B,CAAC;AAC7D,MAAM,uBAAuB,GAAG,oBAAoB,CAAC;AAE9C,MAAM,2BAA2B,GAAiB,MAAM,CAAC,EAAE;IAChE,MAAM,GAAG,yCAAiC,CAAC,MAAM,CAAC,CAAC;IACnD,MAAM,GAAG,yCAAiC,CAAC,MAAM,CAAC,CAAC;IACnD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAJW,QAAA,2BAA2B,+BAItC;AAEK,MAAM,iCAAiC,GAAiB,MAAM,CAAC,EAAE;IACtE,OAAO,mCAAiB,CAAC,MAAM,EAAE,KAAK,EAAC,MAAM,EAAC,EAAE;QAC9C,MAAM,CAAC,UAAU,GAAG,yBAAgB,CAAC,MAAM,CAAC,UAAU,EAAE;YACtD,KAAK,EAAE,0BAA0B,CAAC,MAAM,CAAC;YACzC,IAAI,EAAE,uBAAuB;SAC9B,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AARW,QAAA,iCAAiC,qCAQ5C;AAEK,MAAM,iCAAiC,GAAiB,MAAM,CAAC,EAAE;IACtE,OAAO,mCAAiB,CAAC,MAAM,EAAE,KAAK,EAAC,MAAM,EAAC,EAAE;QAC9C,MAAM,CAAC,UAAU,GAAG,0BAAiB,CAAC,MAAM,CAAC,UAAU,EAAE;YACvD,GAAG,EAAE,CAAC,CAAC,0BAA0B,CAAC,MAAM,CAAC;YACzC,MAAM,EAAE,yCAAgC,EAAE;YAC1C,IAAI,EAAE,yBAAyB;YAC/B,KAAK,EAAE,UAAU,uBAAuB,EAAE;SAC3C,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAVW,QAAA,iCAAiC,qCAU5C;AAEF,SAAgB,0BAA0B,CACxC,MAAuD;;IAEvD,OAAO,CAAA,MAAA,MAAM,CAAC,OAAO,0CAAE,eAAe,KAAI,MAAM,CAAC,eAAe,IAAI,IAAI,CAAC;AAC3E,CAAC;AAJD,gEAIC","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { ConfigPlugin } from '../Plugin.types';\nimport { withAndroidColors, withAndroidStyles } from '../plugins/android-plugins';\nimport { assignColorValue } from './Colors';\nimport { assignStylesValue, getAppThemeLightNoActionBarGroup } from './Styles';\n\nconst ANDROID_WINDOW_BACKGROUND = 'android:windowBackground';\nconst WINDOW_BACKGROUND_COLOR = 'activityBackground';\n\nexport const withRootViewBackgroundColor: ConfigPlugin = config => {\n  config = withRootViewBackgroundColorColors(config);\n  config = withRootViewBackgroundColorStyles(config);\n  return config;\n};\n\nexport const withRootViewBackgroundColorColors: ConfigPlugin = config => {\n  return withAndroidColors(config, async config => {\n    config.modResults = assignColorValue(config.modResults, {\n      value: getRootViewBackgroundColor(config),\n      name: WINDOW_BACKGROUND_COLOR,\n    });\n    return config;\n  });\n};\n\nexport const withRootViewBackgroundColorStyles: ConfigPlugin = config => {\n  return withAndroidStyles(config, async config => {\n    config.modResults = assignStylesValue(config.modResults, {\n      add: !!getRootViewBackgroundColor(config),\n      parent: getAppThemeLightNoActionBarGroup(),\n      name: ANDROID_WINDOW_BACKGROUND,\n      value: `@color/${WINDOW_BACKGROUND_COLOR}`,\n    });\n    return config;\n  });\n};\n\nexport function getRootViewBackgroundColor(\n  config: Pick<ExpoConfig, 'android' | 'backgroundColor'>\n) {\n  return config.android?.backgroundColor || config.backgroundColor || null;\n}\n"]}